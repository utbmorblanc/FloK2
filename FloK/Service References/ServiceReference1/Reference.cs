//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace FloK.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/FloKWS")]
    public partial class Station : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int address_cp_stationField;
        
        private int address_number_stationField;
        
        private string address_street_stationField;
        
        private string addresse_city_stationField;
        
        private string gps_stationField;
        
        private int height_stationField;
        
        private int id_stationField;
        
        private int km_size_stationField;
        
        private string name_stationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int address_cp_station {
            get {
                return this.address_cp_stationField;
            }
            set {
                if ((this.address_cp_stationField.Equals(value) != true)) {
                    this.address_cp_stationField = value;
                    this.RaisePropertyChanged("address_cp_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int address_number_station {
            get {
                return this.address_number_stationField;
            }
            set {
                if ((this.address_number_stationField.Equals(value) != true)) {
                    this.address_number_stationField = value;
                    this.RaisePropertyChanged("address_number_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address_street_station {
            get {
                return this.address_street_stationField;
            }
            set {
                if ((object.ReferenceEquals(this.address_street_stationField, value) != true)) {
                    this.address_street_stationField = value;
                    this.RaisePropertyChanged("address_street_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string addresse_city_station {
            get {
                return this.addresse_city_stationField;
            }
            set {
                if ((object.ReferenceEquals(this.addresse_city_stationField, value) != true)) {
                    this.addresse_city_stationField = value;
                    this.RaisePropertyChanged("addresse_city_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gps_station {
            get {
                return this.gps_stationField;
            }
            set {
                if ((object.ReferenceEquals(this.gps_stationField, value) != true)) {
                    this.gps_stationField = value;
                    this.RaisePropertyChanged("gps_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int height_station {
            get {
                return this.height_stationField;
            }
            set {
                if ((this.height_stationField.Equals(value) != true)) {
                    this.height_stationField = value;
                    this.RaisePropertyChanged("height_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id_station {
            get {
                return this.id_stationField;
            }
            set {
                if ((this.id_stationField.Equals(value) != true)) {
                    this.id_stationField = value;
                    this.RaisePropertyChanged("id_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int km_size_station {
            get {
                return this.km_size_stationField;
            }
            set {
                if ((this.km_size_stationField.Equals(value) != true)) {
                    this.km_size_stationField = value;
                    this.RaisePropertyChanged("km_size_station");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name_station {
            get {
                return this.name_stationField;
            }
            set {
                if ((object.ReferenceEquals(this.name_stationField, value) != true)) {
                    this.name_stationField = value;
                    this.RaisePropertyChanged("name_station");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetAllStations", ReplyAction="http://tempuri.org/IService1/GetAllStationsResponse")]
        System.IAsyncResult BeginGetAllStations(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station> EndGetAllStations(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : FloK.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<FloK.ServiceReference1.IService1>, FloK.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginGetAllStationsDelegate;
        
        private EndOperationDelegate onEndGetAllStationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllStationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetAllStationsCompletedEventArgs> GetAllStationsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FloK.ServiceReference1.IService1.BeginGetAllStations(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllStations(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station> FloK.ServiceReference1.IService1.EndGetAllStations(System.IAsyncResult result) {
            return base.Channel.EndGetAllStations(result);
        }
        
        private System.IAsyncResult OnBeginGetAllStations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((FloK.ServiceReference1.IService1)(this)).BeginGetAllStations(callback, asyncState);
        }
        
        private object[] OnEndGetAllStations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station> retVal = ((FloK.ServiceReference1.IService1)(this)).EndGetAllStations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllStationsCompleted(object state) {
            if ((this.GetAllStationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllStationsCompleted(this, new GetAllStationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllStationsAsync() {
            this.GetAllStationsAsync(null);
        }
        
        public void GetAllStationsAsync(object userState) {
            if ((this.onBeginGetAllStationsDelegate == null)) {
                this.onBeginGetAllStationsDelegate = new BeginOperationDelegate(this.OnBeginGetAllStations);
            }
            if ((this.onEndGetAllStationsDelegate == null)) {
                this.onEndGetAllStationsDelegate = new EndOperationDelegate(this.OnEndGetAllStations);
            }
            if ((this.onGetAllStationsCompletedDelegate == null)) {
                this.onGetAllStationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllStationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllStationsDelegate, null, this.onEndGetAllStationsDelegate, this.onGetAllStationsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override FloK.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<FloK.ServiceReference1.IService1>, FloK.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<FloK.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAllStations(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllStations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station> EndGetAllStations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station> _result = ((System.Collections.ObjectModel.ObservableCollection<FloK.ServiceReference1.Station>)(base.EndInvoke("GetAllStations", _args, result)));
                return _result;
            }
        }
    }
}
